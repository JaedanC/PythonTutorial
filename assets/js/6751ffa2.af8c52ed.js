"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[679],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=p(n),h=o,f=c["".concat(s,".").concat(h)]||c[h]||d[h]||i;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=h;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[c]="string"==typeof e?e:o,l[1]=a;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8478:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:4,slug:"FolderSizes"},l="Folder Sizes",a={unversionedId:"Challenges/Folder Sizes",id:"Challenges/Folder Sizes",title:"Folder Sizes",description:"Difficulty: \u2b50\u2b50\u2b50\u2b50\u2b50",source:"@site/docs/Challenges/Folder Sizes.md",sourceDirName:"Challenges",slug:"/Challenges/FolderSizes",permalink:"/PythonTutorial/docs/Challenges/FolderSizes",draft:!1,editUrl:"https://github.com/JaedanC/PythonTutorial/tree/main/docs/Challenges/Folder Sizes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,slug:"FolderSizes"},sidebar:"tutorialSidebar",previous:{title:"Crossword Solver",permalink:"/PythonTutorial/docs/Challenges/CrosswordSolver"},next:{title:"Tron",permalink:"/PythonTutorial/docs/Challenges/Tron"}},s={},p=[{value:"Running the program",id:"running-the-program",level:2},{value:"OS functions",id:"os-functions",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"folder-sizes"},"Folder Sizes"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Difficulty: \u2b50\u2b50\u2b50\u2b50\u2b50")),(0,o.kt)("p",null,"Default windows does not have a feature to show the sizes of folders. To implement this ourselves we must recursively query the sizes of the files inside the directory to the get the size of the folder."),(0,o.kt)("p",null,"This program will also let the user traverse the file system and open file explorer to that location."),(0,o.kt)("h2",{id:"running-the-program"},"Running the program"),(0,o.kt)("p",null,"Imagine you have the file structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"\ud83d\udcc2mystuff\n  \u2523 \ud83d\udcdcsize.py\n  \u2523 \ud83d\udcdcdata.csv\n  \u2517 \ud83d\udcc2levels\n    \u2523 \ud83d\udcdcfirst.txt\n    \u2517 \ud83d\udcdcsecond.txt\n")),(0,o.kt)("p",null,"This is what the execution of the program would be if the working directory was ",(0,o.kt)("inlineCode",{parentName:"p"},"mystuff"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ program size.py\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},".\n[1] \ud83d\udcc2  levels    (437000 kb)\n[2] \ud83d\udcdc  data.csv  (256 kb)\n[3] \ud83d\udcdc  size.py   (15 kb)\n> help\n\n[1-99]       File:      Prints the content of the file\n             Directory: Opens the directory\n..           Go up a directory. Do not go further up than\n             the initial working directory.\n\nopen         Open the current directory in windows\nopen [1-99]  File:      Opens the file in windows\n             Directory: Opens the directory in windows explorer\n\nsort size    Sorts directories by size (default)\nsort name    Sorts directories by name\nhelp         Prints this message\nexit         Closes the application\n\n.\n[1] \ud83d\udcc2  levels    (437000 kb)\n[2] \ud83d\udcdc  data.csv  (256 kb)\n[3] \ud83d\udcdc  size.py   (15 kb)\n> 0\n\n./levels\n[1] \ud83d\udcdc  first.txt   (250000 kb)\n[2] \ud83d\udcdc  second.txt  (187000 kb)\n> ..\n\n.\n[1] \ud83d\udcc2  levels    (437000 kb)\n[2] \ud83d\udcdc  data.csv  (256 kb)\n[3] \ud83d\udcdc  size.py   (15 kb)\n> open 1\n\n")),(0,o.kt)("p",null,"At this point the ",(0,o.kt)("inlineCode",{parentName:"p"},"levels")," folder should open in windows explorer."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},".\n[1] \ud83d\udcc2  levels    (437000 kb)\n[2] \ud83d\udcdc  data.csv  (256 kb)\n[3] \ud83d\udcdc  size.py   (15 kb)\n> open\n\n")),(0,o.kt)("p",null,"At this point the ",(0,o.kt)("inlineCode",{parentName:"p"},"mystuff")," folder should open in windows explorer."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},".\n[1] \ud83d\udcc2  levels    (437000 kb)\n[2] \ud83d\udcdc  data.csv  (256 kb)\n[3] \ud83d\udcdc  size.py   (15 kb)\n> sort name\n\n.\n[1] \ud83d\udcdc  data.csv  (256 kb)\n[2] \ud83d\udcc2  levels    (437000 kb)\n[3] \ud83d\udcdc  size.py   (15 kb)\n> exit\n\n")),(0,o.kt)("h2",{id:"os-functions"},"OS functions"),(0,o.kt)("p",null,"These are some functions that will be useful in this challenge:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"os.walk()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"os.stat()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"os.startfile()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"os.path.abspath()"))),(0,o.kt)("p",null,"Obtaining the sizes of directories requires you to recursively sum the size of the files and directories inside said directory."),(0,o.kt)("p",null,"Any other details are free to be interpreted. This program aims to challenge you to use a library not covered in the tutorials."))}d.isMDXComponent=!0}}]);